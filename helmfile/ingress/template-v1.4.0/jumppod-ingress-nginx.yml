replicaCount: 1

secret:
  enabled: false
  name: ""
  mountPath: {}
  subPath: {}
  readOnly: true
  data: {}

configMap:
  enabled: true
  name: "jumppod"
  mountPath: /app/core/config
  readOnly: true
  data:
    .app.config.json : |-
      {
          "AppName": "Commons Service",
          "GRPCTimeout": 10,
          "CacheExpiry": 300,
          "CacheCleanup": 600,
          "DefaultPageLimit": 3,
          "ClientTimeout": 10
      }

image:
  repository: devopscorner/cicd:alpine
  pullPolicy: IfNotPresent  # IfNotPresent -or- Always
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: "jumppod-nginx"

serviceAccount:
  create: true
  annotations: {}
  name: jumppod
  namespace: devops-tools

service:
  enabled: true
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 80
      protocol: TCP
    - name: ssh
      port: 2222
      targetPort: 22
      protocol: TCP

containers:
  ports:
    - name: http
      containerPort: 80
      protocol: TCP
    - name: ssh
      containerPort: 22
      protocol: TCP

envFrom:
  enabled: true
  envFrom:
    - configMapRef:
        name: jumppod-config

ingress:
  enabled: true
  annotations:
    ingress.kubernetes.io/whitelist-source-range: 32.0.0.0/32
    kubernetes.io/ingress.class: nginx
    meta.helm.sh/release-name: jumppod-nginx
    meta.helm.sh/release-namespace: devops-tools
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/client-max-body-size: 512M
    nginx.ingress.kubernetes.io/cors-allow-headers: '*'
    nginx.ingress.kubernetes.io/cors-allow-methods: '*'
    nginx.ingress.kubernetes.io/cors-allow-origin: '*'
    nginx.ingress.kubernetes.io/enable-cors: 'true'
    nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/from-to-www-redirect: 'true'
    nginx.ingress.kubernetes.io/proxy-connect-timeout: '30'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '3600'
    nginx.ingress.kubernetes.io/proxy-send-timeout: '3600'
    nginx.ingress.kubernetes.io/secure-backends: 'true'
    nginx.ingress.kubernetes.io/server-snippets: |
      location / {
          proxy_http_version 1.1;
          proxy_set_header X-Forwarded-Host $http_host;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header X-Forwarded-For $remote_addr;
          proxy_set_header Host $host;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "Upgrade";
          proxy_cache_bypass $http_upgrade;
      }
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/use-proxy-protocol: 'true'
    nginx.ingress.kubernetes.io/use-regex: 'true'
    nginx.org/websocket-services: 'jumppod-nginx'
  hosts:
    - host: jumppods-nginx.awscb.id
      http:
        paths:
          - path: /
            pathType: Prefix   # Prefix -or - ImplementationSpecific
            backend:
              service:
                name: jumppod-nginx
                port:
                  number: 80
  tls: []

application:
  enabled: true
  env:
    - name: HELM_TEMPLATE_NAME
      value: api

resources:
  limits:
    cpu: 200m
    memory: 200Mi
  requests:
    cpu: 140m
    memory: 170Mi

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector:
  enabled: true
  select:
    node: "devops-tools"   # DEV/UAT Cluster

tolerations: []

affinity: {}

podAnnotations: {}

podSecurityContext: {}

securityContext: {}